{
  "Serilog": {
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.ApplicationInsights" ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.EntityFrameworkCore": "Warning",
        "Microsoft.AspNetCore.SignalR": "Information",
        "Hangfire": "Information"
      }
    },
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {SourceContext}: {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "ApplicationInsights",
        "Args": {
          "telemetryConverter": "Serilog.Sinks.ApplicationInsights.TelemetryConverters.TraceTelemetryConverter, Serilog.Sinks.ApplicationInsights"
        }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],
    "Properties": {
      "Application": "SmartCommerce.NotificationService"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "NotificationDb": "Server=localhost;Database=SmartCommerceNotificationDb;Trusted_Connection=true;TrustServerCertificate=true;",
    "Redis": "localhost:6379"
  },
  "JwtSettings": {
    "SecretKey": "your-super-secret-jwt-key-that-is-at-least-32-characters-long",
    "Issuer": "SmartCommerce.NotificationService",
    "Audience": "SmartCommerce.Clients",
    "ExpirationMinutes": 60
  },
  "ServiceBus": {
    "ConnectionString": "Endpoint=sb://your-service-bus.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=your-key",
    "TopicName": "notification-events"
  },
  "KeyVault": {
    "VaultUri": "https://your-keyvault.vault.azure.net/",
    "ClientId": "your-client-id",
    "ClientSecret": "your-client-secret",
    "TenantId": "your-tenant-id"
  },
  "ApplicationInsights": {
    "ConnectionString": "InstrumentationKey=your-instrumentation-key;IngestionEndpoint=https://your-region.in.applicationinsights.azure.com/;LiveEndpoint=https://your-region.livediagnostics.monitor.azure.com/"
  },
  "Email": {
    "Provider": "AzureCommunicationServices",
    "ConnectionString": "endpoint=https://your-communication-service.communication.azure.com/;accesskey=your-access-key",
    "FromAddress": "noreply@smartcommerce.com",
    "FromDisplayName": "SmartCommerce"
  },
  "Sms": {
    "Provider": "AzureCommunicationServices",
    "ConnectionString": "endpoint=https://your-communication-service.communication.azure.com/;accesskey=your-access-key",
    "FromNumber": "+1234567890"
  },
  "PushNotifications": {
    "WebPush": {
      "Subject": "mailto:admin@smartcommerce.com",
      "PublicKey": "your-vapid-public-key",
      "PrivateKey": "your-vapid-private-key"
    },
    "Firebase": {
      "ServerKey": "your-firebase-server-key",
      "SenderId": "your-firebase-sender-id"
    }
  },
  "SignalR": {
    "RedisConnectionString": "localhost:6379",
    "HubOptions": {
      "EnableDetailedErrors": false,
      "MaximumReceiveMessageSize": 1048576,
      "StreamBufferCapacity": 10,
      "ClientTimeoutInterval": "00:01:00",
      "KeepAliveInterval": "00:00:30"
    }
  },
  "Hangfire": {
    "DashboardPath": "/hangfire",
    "WorkerCount": 5,
    "PollingInterval": "00:00:05"
  },
  "NotificationSettings": {
    "DefaultRetryCount": 3,
    "RetryDelayMinutes": 5,
    "MaxBulkSize": 1000,
    "CleanupRetentionDays": 90,
    "DefaultQuietHours": {
      "Start": "22:00",
      "End": "08:00"
    }
  },
  "RateLimiting": {
    "NotificationApi": {
      "PermitLimit": 200,
      "WindowMinutes": 1,
      "QueueLimit": 20
    }
  },
  "Cache": {
    "DefaultExpiration": "00:15:00",
    "NotificationCacheExpiration": "00:05:00",
    "TemplateCacheExpiration": "01:00:00"
  }
}